{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","toReverse","setToReverse","visibleGoods","goods","_ref","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","_jsxs","className","children","_jsx","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAiB,iBA2BVC,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAkCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,EA5BiB,SAACC,EAAKC,GAAgC,IAA5BR,EAASQ,EAATR,UAAWI,EAASI,EAATJ,UACtCK,EAAaC,YAAOH,GAqB1B,OAnBIP,GACFS,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQb,GACN,KAAKP,EACH,OAAOmB,EAAME,cAAcD,GAE7B,KAAKnB,EACH,OAAOkB,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXX,GACFK,EAAcO,UAGTP,EAOHQ,CAAiBzB,EAAiB,CAAEQ,YAAWI,cAEnD,OACEc,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,QAAS,kBAAMrB,EAAaR,IAC5B8B,KAAK,SACLJ,UAAWK,IAAG,SAAU,UAAW,CACjC,WAAYxB,IAAcP,IACzB2B,SACJ,wBAIDC,cAAA,UACEC,QAAS,kBAAMrB,EAAaP,IAC5B6B,KAAK,SACLJ,UAAWK,IAAG,SAAU,aAAc,CACpC,WAAYxB,IAAcN,IACzB0B,SACJ,mBAIDC,cAAA,UACEC,QAAS,WAELjB,GADgB,IAAdD,IAMNmB,KAAK,SACLJ,UAAWK,IAAG,SAAU,aAAc,CACpC,YAA0B,IAAdpB,IACXgB,SACJ,YAKCpB,GAAaI,EAETiB,cAAA,UACEC,QAAS,WACPrB,EAAa,IACbI,GAAa,IAEfkB,KAAK,SACLJ,UAAU,4BAA2BC,SACtC,UAID,MAIRC,cAAA,MAAAD,SACGd,EAAamB,KAAI,SAAAC,GAAI,OAAKL,cAAA,MAAI,UAAQ,OAAMD,SAAaM,GAAPA,YC3G3DC,IAASC,OACPP,cAAC1B,EAAG,IACJkC,SAASC,eAAe,W","file":"static/js/main.66fa9fda.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\n\nconst getPreparedGoods = (goods, { sortField, toReverse }) => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (toReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [toReverse, setToReverse] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, { sortField, toReverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_ALPHABETICALLY)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            if (toReverse === false) {\n              setToReverse(true);\n            } else {\n              setToReverse(false);\n            }\n          }}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': toReverse === false,\n          })}\n        >\n          Reverse\n        </button>\n\n        {\n          sortField || toReverse\n            ? (\n              <button\n                onClick={() => {\n                  setSortField('');\n                  setToReverse(false);\n                }}\n                type=\"button\"\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            )\n            : ''\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}